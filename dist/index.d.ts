import Task from 'taskarian';
import AjaxResponse from './AjaxResponse';
import * as HttpError from './HttpError';
import * as Request from './Request';
import RequestBuilder from './RequestBuilder';
declare var _default: {
    default: typeof RequestBuilder;
    get<A>(url: string, decoder: Request.DecoderFn<A>): RequestBuilder<A>;
    getString(url: string): RequestBuilder<string>;
    post<A>(url: string, data: any, decoder: Request.DecoderFn<A>): RequestBuilder<A>;
    RequestBuilder: typeof RequestBuilder;
    badUrl(message: string): HttpError.HttpError;
    timeout(): HttpError.HttpError;
    networkError(): HttpError.HttpError;
    badStatus(response: AjaxResponse): HttpError.HttpError;
    badPayload(message: string, response: AjaxResponse): HttpError.HttpError;
    toHttpTask<A>(request: Request.Request<A>): Task<HttpError.HttpError, A>;
    ignore404With<A>(f: (e: HttpError.HttpError) => A): (err: HttpError.HttpError) => Task<{}, {}>;
};
export default _default;
